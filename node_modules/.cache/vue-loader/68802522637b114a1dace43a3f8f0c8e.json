{"remainingRequest":"/home/mololuwasamuel/projects/assignments/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mololuwasamuel/projects/assignments/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/mololuwasamuel/projects/assignments/src/App.vue","mtime":1608671609740},{"path":"/home/mololuwasamuel/projects/assignments/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mololuwasamuel/projects/assignments/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mololuwasamuel/projects/assignments/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mololuwasamuel/projects/assignments/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mololuwasamuel/projects/assignments/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCnVsewogIGxpc3Qtc3R5bGU6IG5vbmU7CiAgbWFyZ2luOiAwOwogIHBhZGRpbmc6IDA7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGxlZnQ6IDA7CiAgcmlnaHQ6IDA7CiAgb3ZlcmZsb3cteTogc2Nyb2xsOwogIGhlaWdodDo2MDBweDsKICB6LWluZGV4OiAwOwogIHBhZGRpbmctYm90dG9tOiAxMDBweDsKfQoKdWwgbGl7CiAgZGlzcGxheTppbmxpbmUtYmxvY2s7CiAgY2xlYXI6IGJvdGg7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXItcmFkaXVzOiAzMHB4OwogIG1hcmdpbi1ib3R0b206IDJweDsKICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsKfQoKLmhpbXsKICBiYWNrZ3JvdW5kOiAjZWVlOwogIGZsb2F0OiBsZWZ0Owp9CgoubWV7CiAgYmFja2dyb3VuZDogIzAwODRmZjsKICBmbG9hdDogcmlnaHQ7Cn0KCi5tZXsKICBmbG9hdDogcmlnaHQ7CiAgYmFja2dyb3VuZDogIzAwODRmZjsKICBjb2xvcjogI2ZmZjsKfQoKLmhpbSArIC5tZXsKICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNXB4Owp9CgoubWUgKyAubWV7CiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDVweDsKICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNXB4Owp9CgoubWU6bGFzdC1vZi10eXBlIHsKICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMzBweDsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n    <v-app-bar\n      app\n      color=\"primary\"\n      dark\n    >\n      <div class=\"d-flex align-center\">\n\n      </div>\n\n      <v-spacer></v-spacer>\n    </v-app-bar>\n\n    <v-content>\n      <v-container fluid>\n        <v-row>\n          <ul>\n            <li v-for=\"(message, index) in messages.slice(0, next)\" v-bind:key=\"index\" :class=\"message.owner\">{{message.text}}</li>\n          </ul>\n        </v-row>\n        <v-row :style=\"{position: 'absolute', bottom: 0, left: 0, right: 0, padding: '10px', zIndex: 100, background: '#ffffff'}\">\n          <v-col cols=\"12\" md=\"12\">\n            <v-textarea\n                    filled\n                    name=\"input-7-1\"\n                    label=\"Type your message\"\n                    v-model=\"input\"\n            ></v-textarea>\n          </v-col>\n          <v-col cols=\"12\" md=\"12\">\n            <div class=\"my-2\">\n              <v-btn v-if=\"newChat\" @click=\"send\" x-large :style=\"{position: 'absolute', bottom: 0, right: 0, background: '#56c8d8'}\" color=\"primary\" dark>Let's chat</v-btn>\n              <v-btn v-else-if=\"!endChat\" @click=\"send\" x-large :style=\"{position: 'absolute', bottom: 0, right: 0, background: '#56c8d8'}\" color=\"primary\" dark>Send Message</v-btn>\n              <v-btn v-else @click=\"send\" x-large :style=\"{position: 'absolute', bottom: 0, right: 0, background: '#56c8d8'}\" disabled color=\"primary\" dark>Send Message</v-btn>\n            </div>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-content>\n  </v-app>\n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n\n  components: {\n\n  },\n\n  data: () => ({\n    name: '',\n    age: 0,\n    location: '',\n    feeling: '',\n    hobby: '',\n    next: 0,\n    input: '',\n    toChat: [],\n    newChat: true,\n    endChat: false,\n    messages: [\n      {\n        text: \"Hi, I'm Peter!\",\n        owner: 'him'\n      },\n      {\n        text: \"What's your name?\",\n        ask: \"name\",\n        owner: 'him'\n      },\n      {\n        text: \"Nice to meet you!\",\n        owner: 'him'\n      },\n      {\n        text: \"How was your day?\",\n        ask: \"feeling\",\n        owner: 'him'\n      },\n      {\n        text: \"Where're you from?\",\n        ask: \"location\",\n        owner: 'him'\n      },\n      {\n        text: \"Nice!\",\n        owner: 'him'\n      },\n      {\n        text: \"How old are you?\",\n        ask: \"age\",\n        owner: 'him'\n      },\n      {\n        text: \"What's your favorite hobby?\",\n        ask: \"hobby\",\n        owner: 'him'\n      },\n      {\n        text: \"Wow, cool\",\n        owner: 'him'\n      }\n    ]\n  }),\n  created(){\n      this.getMessage();\n  },\n  methods: {\n    getMessage(){\n\n    },\n    send() {\n      if(this.newChat){\n        this.newChat = false;\n\n        if(this.input.length > 0){\n            this.name = this.input;\n            this.messages.splice(this.next, 0,{\n              text: this.input,\n              owner: 'me'\n            })\n            this.input = \"\";\n        }\n      }\n\n      let active = true\n      while(active) {\n        this.scrollToBottom();\n        console.log(this.input)\n        if(this.input.length > 0){\n          \n          this.name = this.input;\n          this.messages.splice(this.next, 0,{\n            text: this.input,\n            owner: 'me'\n          })\n          this.input = \"\";\n        }\n\n        if (typeof this.messages[this.next].ask === 'undefined') {\n          if(this.messages.length <= this.next){\n            this.endChat = false;\n          }\n          this.next += 1;\n        } else {\n          /*if (this.messages[this.next].ask === 'name') {\n           \n          }*/\n          this.next += 1;\n          active = false;\n        }\n\n         \n      }\n    },\n    scrollToBottom(){  \n      console.log(\"awesome\")  \t\n      var container = this.$el.querySelector(\"ul\");\n      console.log(container.scrollHeight);\n      container.scrollTop = container.scrollHeight;\n    },\n  }\n};\n</script>\n\n<style>\n  ul{\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    left: 0;\n    right: 0;\n    overflow-y: scroll;\n    height:600px;\n    z-index: 0;\n    padding-bottom: 100px;\n  }\n\n  ul li{\n    display:inline-block;\n    clear: both;\n    padding: 20px;\n    border-radius: 30px;\n    margin-bottom: 2px;\n    font-family: Helvetica, Arial, sans-serif;\n  }\n\n  .him{\n    background: #eee;\n    float: left;\n  }\n\n  .me{\n    background: #0084ff;\n    float: right;\n  }\n\n  .me{\n    float: right;\n    background: #0084ff;\n    color: #fff;\n  }\n\n  .him + .me{\n    border-bottom-right-radius: 5px;\n  }\n\n  .me + .me{\n    border-top-right-radius: 5px;\n    border-bottom-right-radius: 5px;\n  }\n\n  .me:last-of-type {\n    border-bottom-right-radius: 30px;\n  }\n</style>\n"]}]}